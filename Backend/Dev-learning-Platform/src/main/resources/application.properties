# =============================================================================
# CONFIGURACIÓN DE LA APLICACIÓN
# =============================================================================

# Nombre de la aplicación Spring Boot
spring.application.name=Dev-learning-Platform

# =============================================================================
# CONFIGURACIÓN JWT (JSON Web Tokens)
# =============================================================================

# Clave secreta para firmar y verificar tokens JWT
# ⚠️  IMPORTANTE: Cambiar en producción por una clave segura y larga
# Esta clave debe tener al menos 64 caracteres para HS512
jwt.secret=EstaEsUnaClaveSecretaMuyLargaYSeguraParaJWTEnDesarrolloQueDebeTenerAlMenos64CaracteresParaHS512

# Tiempo de expiración del access token en milisegundos (1 hora = 3600000 ms)
jwt.expiration=3600000

# Tiempo de expiración del refresh token en milisegundos (7 días = 604800000 ms)
jwt.refresh-expiration=604800000

# Número máximo de refresh tokens activos permitidos por usuario
jwt.max-refresh-tokens-per-user=5

# =============================================================================
# CONFIGURACIÓN DE LOGGING
# =============================================================================

# Nivel de logging para el paquete de la aplicación
logging.level.com.Dev_learning_Platform=DEBUG

# Nivel de logging para Spring Security (útil para debugging)
logging.level.org.springframework.security=DEBUG

# Patrón de formato para logs en consola
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# =============================================================================
# CONFIGURACIÓN DE BASE DE DATOS
# =============================================================================

# Configuración de la base de datos MySQL
# ⚠️  IMPORTANTE: Configurar según tu entorno de desarrollo/producción
# spring.datasource.url=jdbc:mysql://localhost:3306/e_learning_platform
# spring.datasource.username=tu_usuario
# spring.datasource.password=tu_contraseña
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración de JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# =============================================================================
# CONFIGURACIÓN DE BASE DE DATOS H2 (DESARROLLO)
# =============================================================================

# Configuración de H2 para desarrollo (base de datos en memoria)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# =============================================================================
# CONFIGURACIÓN DE SERVIDOR
# =============================================================================

# Puerto del servidor (por defecto 8080)
# server.port=8080

# Configuración de contexto de la aplicación
# server.servlet.context-path=/api

# Configuración de CORS (Cross-Origin Resource Sharing)
# spring.web.cors.allowed-origins=*
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.web.cors.allowed-headers=*

# =============================================================================
# CONFIGURACIÓN DE SEGURIDAD ADICIONAL
# =============================================================================

# Configuración de rate limiting (opcional)
# spring.security.rate-limit.enabled=true
# spring.security.rate-limit.max-requests=100
# spring.security.rate-limit.window-size=3600

# Configuración de auditoría (opcional)
# spring.security.audit.enabled=true
# spring.security.audit.log-failed-attempts=true

# =============================================================================
# CONFIGURACIÓN DE MONITOREO
# =============================================================================

# Actuator endpoints para monitoreo (opcional)
# management.endpoints.web.exposure.include=health,info,metrics
# management.endpoint.health.show-details=always

# =============================================================================
# NOTAS IMPORTANTES
# =============================================================================

# 1. CAMBIAR EN PRODUCCIÓN:
#    - jwt.secret: Usar una clave secreta larga y segura
#    - spring.datasource.*: Configurar base de datos de producción
#    - logging.level: Cambiar a INFO o WARN en producción
#    - CORS: Configurar orígenes específicos en producción

# 2. CONFIGURACIÓN DE BASE DE DATOS:
#    - Descomenta las líneas de base de datos y configura según tu entorno
#    - Asegúrate de que MySQL esté corriendo en el puerto configurado
#    - Crea la base de datos antes de ejecutar la aplicación

# 3. SEGURIDAD:
#    - Nunca commitees credenciales reales al repositorio
#    - Usa variables de entorno para credenciales en producción
#    - Configura HTTPS en producción

# 4. LOGGING:
#    - En desarrollo: DEBUG para debugging detallado
#    - En producción: INFO o WARN para mejor rendimiento
