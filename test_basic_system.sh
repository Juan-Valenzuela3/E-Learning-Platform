#!/bin/bash

# Script de prueba b√°sico para el sistema de e-learning
# Prueba: Admin, estudiantes, instructores y creaci√≥n de cursos

# Configuraci√≥n
BASE_URL="http://localhost:8080"
ADMIN_EMAIL="admin@system.com"
ADMIN_PASSWORD="admin123"
STUDENT_EMAIL="estudiante@test.com"
STUDENT_PASSWORD="password123"
INSTRUCTOR_EMAIL="instructor@test.com"
INSTRUCTOR_PASSWORD="password123"

echo "üß™ PRUEBAS B√ÅSICAS DEL SISTEMA E-LEARNING"
echo "=========================================="

# Funci√≥n para hacer login y obtener token
login_and_get_token() {
    local email=$1
    local password=$2
    local token_var=$3
    
    echo "üîê Autenticando $email..."
    local response=$(curl -s -X POST "$BASE_URL/api/auth/login" \
        -H "Content-Type: application/json" \
        -d "{\"email\":\"$email\",\"password\":\"$password\"}")
    
    if echo "$response" | grep -q "accessToken"; then
        local token=$(echo "$response" | grep -o '"accessToken":"[^"]*"' | cut -d'"' -f4)
        eval "$token_var=\"$token\""
        echo "‚úÖ Login exitoso para $email"
        return 0
    else
        echo "‚ùå Error en login para $email: $response"
        return 1
    fi
}

# Funci√≥n para registrar un usuario
register_user() {
    local email=$1
    local password=$2
    local userName=$3
    local lastName=$4
    local role=$5
    
    echo "üìù Registrando usuario $email..."
    local response=$(curl -s -X POST "$BASE_URL/api/auth/register" \
        -H "Content-Type: application/json" \
        -d "{\"userName\":\"$userName\",\"lastName\":\"$lastName\",\"email\":\"$email\",\"password\":\"$password\",\"role\":\"$role\"}")
    
    if echo "$response" | grep -q "id"; then
        echo "‚úÖ Usuario registrado exitosamente"
        return 0
    else
        echo "‚ùå Error al registrar usuario: $response"
        return 1
    fi
}

# Funci√≥n para crear un curso
create_course() {
    local token=$1
    local title=$2
    local description=$3
    
    echo "üìö Creando curso: $title..."
    local response=$(curl -s -X POST "$BASE_URL/api/courses" \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d "{\"title\":\"$title\",\"description\":\"$description\"}")
    
    if echo "$response" | grep -q "id"; then
        echo "‚úÖ Curso creado exitosamente"
        return 0
    else
        echo "‚ùå Error al crear curso: $response"
        return 1
    fi
}

# Funci√≥n para obtener cursos
get_courses() {
    local token=$1
    local endpoint=$2
    
    echo "üìñ Obteniendo cursos..."
    local response=$(curl -s -X GET "$BASE_URL/api/courses/$endpoint" \
        -H "Authorization: Bearer $token")
    
    if echo "$response" | grep -q "id"; then
        echo "‚úÖ Cursos obtenidos exitosamente"
        echo "$response" | jq '.' 2>/dev/null || echo "$response"
        return 0
    else
        echo "‚ùå Error al obtener cursos: $response"
        return 1
    fi
}

echo ""
echo "1Ô∏è‚É£ PRUEBA: Login del admin por defecto"
echo "----------------------------------------"
ADMIN_TOKEN=""
if login_and_get_token "$ADMIN_EMAIL" "$ADMIN_PASSWORD" "ADMIN_TOKEN"; then
    echo "‚úÖ Admin por defecto funciona correctamente"
else
    echo "‚ùå Error: No se pudo autenticar al admin por defecto"
    exit 1
fi

echo ""
echo "2Ô∏è‚É£ PRUEBA: Registrar un estudiante"
echo "----------------------------------"
if register_user "$STUDENT_EMAIL" "$STUDENT_PASSWORD" "Juan" "Estudiante" "STUDENT"; then
    echo "‚úÖ Estudiante registrado correctamente"
else
    echo "‚ùå Error al registrar estudiante"
    exit 1
fi

echo ""
echo "3Ô∏è‚É£ PRUEBA: Registrar un instructor"
echo "----------------------------------"
if register_user "$INSTRUCTOR_EMAIL" "$INSTRUCTOR_PASSWORD" "Mar√≠a" "Instructora" "INSTRUCTOR"; then
    echo "‚úÖ Instructor registrado correctamente"
else
    echo "‚ùå Error al registrar instructor"
    exit 1
fi

echo ""
echo "4Ô∏è‚É£ PRUEBA: Login del instructor"
echo "-------------------------------"
INSTRUCTOR_TOKEN=""
if login_and_get_token "$INSTRUCTOR_EMAIL" "$INSTRUCTOR_PASSWORD" "INSTRUCTOR_TOKEN"; then
    echo "‚úÖ Instructor puede hacer login correctamente"
else
    echo "‚ùå Error: No se pudo autenticar al instructor"
    exit 1
fi

echo ""
echo "5Ô∏è‚É£ PRUEBA: Instructor crea un curso"
echo "-----------------------------------"
if create_course "$INSTRUCTOR_TOKEN" "Programaci√≥n Java B√°sica" "Curso introductorio a Java"; then
    echo "‚úÖ Instructor puede crear cursos"
else
    echo "‚ùå Error: Instructor no pudo crear curso"
    exit 1
fi

echo ""
echo "6Ô∏è‚É£ PRUEBA: Instructor crea otro curso"
echo "-------------------------------------"
if create_course "$INSTRUCTOR_TOKEN" "Spring Boot Avanzado" "Curso avanzado de Spring Boot"; then
    echo "‚úÖ Instructor puede crear m√∫ltiples cursos"
else
    echo "‚ùå Error: Instructor no pudo crear segundo curso"
    exit 1
fi

echo ""
echo "7Ô∏è‚É£ PRUEBA: Instructor ve sus cursos"
echo "-----------------------------------"
if get_courses "$INSTRUCTOR_TOKEN" "my-courses"; then
    echo "‚úÖ Instructor puede ver sus cursos"
else
    echo "‚ùå Error: Instructor no pudo ver sus cursos"
fi

echo ""
echo "8Ô∏è‚É£ PRUEBA: Ver todos los cursos activos"
echo "---------------------------------------"
if get_courses "$INSTRUCTOR_TOKEN" "all"; then
    echo "‚úÖ Se pueden ver todos los cursos activos"
else
    echo "‚ùå Error: No se pudieron ver todos los cursos"
fi

echo ""
echo "9Ô∏è‚É£ PRUEBA: Login del estudiante"
echo "-------------------------------"
STUDENT_TOKEN=""
if login_and_get_token "$STUDENT_EMAIL" "$STUDENT_PASSWORD" "STUDENT_TOKEN"; then
    echo "‚úÖ Estudiante puede hacer login correctamente"
else
    echo "‚ùå Error: No se pudo autenticar al estudiante"
    exit 1
fi

echo ""
echo "üîü PRUEBA: Estudiante ve todos los cursos"
echo "----------------------------------------"
if get_courses "$STUDENT_TOKEN" "all"; then
    echo "‚úÖ Estudiante puede ver todos los cursos activos"
else
    echo "‚ùå Error: Estudiante no pudo ver los cursos"
fi

echo ""
echo "üèÅ PRUEBAS B√ÅSICAS COMPLETADAS"
echo "=============================="
echo "‚úÖ Admin por defecto funciona"
echo "‚úÖ Registro de estudiantes funciona"
echo "‚úÖ Registro de instructores funciona"
echo "‚úÖ Login de todos los roles funciona"
echo "‚úÖ Instructores pueden crear cursos"
echo "‚úÖ Todos pueden ver cursos activos"
echo ""
echo "üìã RESUMEN DEL SISTEMA B√ÅSICO:"
echo "   ‚Ä¢ Admin: admin@system.com / admin123"
echo "   ‚Ä¢ Estudiantes: Pueden registrarse y ver cursos"
echo "   ‚Ä¢ Instructores: Pueden registrarse, crear cursos y ver sus cursos"
echo "   ‚Ä¢ Cursos: Sistema b√°sico de creaci√≥n y visualizaci√≥n"
echo ""
echo "üéâ ¬°Sistema b√°sico funcionando correctamente!"
